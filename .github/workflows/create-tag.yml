name: Create Tag

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch para criar a tag (ex: release-please-branches-main)'
        required: true
        default: 'main'
      tag_name:
        description: 'Name (ex: v1.2.3)'
        required: true

jobs:

  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup do Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build e Testes com Maven
        working-directory: server/cardappio
        run: mvn clean verify -B -q

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Instalar dependências
        working-directory: web
        run: npm ci

      - name: Rodar Testes
        working-directory: web
        run: npm run test:ci

  create-tag:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout da branch selecionada
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Obter SHA do commit atual da branch
        id: get_sha
        run: |
          SHA=$(git rev-parse HEAD)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Criar tag via API do GitHub
        uses: actions/github-script@v7
        with:
          token: ${{ secrets.PERSONAL_ACCESS }}
          script: |
            const tagName = '${{ github.event.inputs.tag_name }}';
            const sha = '${{ steps.get_sha.outputs.sha }}';

            if (!tagName) {
              core.setFailed('Input tag_name está vazio');
              return;
            }

            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tagName}`
              });
              console.log(`Tag ${tagName} já existe, abortando criação.`);
            } catch (error) {
              if (error.status === 404) {
                await github.rest.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `refs/tags/${tagName}`,
                  sha: sha
                });
                console.log(`Tag ${tagName} criada no commit ${sha}.`);
              } else {
                throw error;
              }
            }
