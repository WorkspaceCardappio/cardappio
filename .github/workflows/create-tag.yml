name: Testar e Criar Tag Manualmente

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch de origem para a tag'
        required: true
        default: 'main'
      tag_name:
        description: 'Nome da nova tag (ex: v1.2.3)'
        required: true

jobs:

  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup do Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build e Testes com Maven
        working-directory: server/cardappio
        run: mvn clean verify -B -q


  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Instalar dependências
        working-directory: web
        run: npm ci

      - name: Rodar Testes
        working-directory: web
        run: npm run test:ci

  create-tag:
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      - frontend-tests

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Obter SHA do commit atual
        id: get_sha
        run: |
          SHA=$(git rev-parse HEAD)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Criar
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS }}
          script: |
            const tagName = core.getInput('tag_name');
            const sha = '${{ steps.get_sha.outputs.sha }}';

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: sha
            });
